{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Finance Control",
    "description": "O objetivo deste projeto é realizar o controle de finanças pessoais, por meio de receitas, gastos e investimentos realizados",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/login": {
      "post": {
        "tags": ["Users"],
        "description": "Login and generate token to an existing user",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "Username and password to login",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Token is generated"
          },
          "401": {
            "description": "Invalid username or password / User does not exists"
          }
        }
      }
    },
    "/refresh_token": {
      "post": {
        "tags": ["Users"],
        "description": "Updates token with refresh token",
        "parameters": [
          {
            "name": "refreshtoken",
            "in": "body",
            "description": "Refresh Token got into login",
            "schema": {
              "$ref": "#/definitions/RefreshToken"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Token is generated"
          },
          "401": {
            "description": "Invalid refresh token"
          }
        }
      }
    },
    "/budget/summarize": {
      "get": {
        "tags": ["Budget"],
        "description": "Comparative of Earnings, Expenses and Recipe",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Use 'Bearer' prefix",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "name": "month",
            "in": "query",
            "required": true,
            "description": "Month to compare",
            "type": "integer"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/earning": {
      "get": {
        "tags": ["Earnings"],
        "description": "Index of Earning",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Use 'Bearer' prefix",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "post": {
        "tags": ["Earnings"],
        "description": "Store a new earning",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Use 'Bearer' prefix",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "name": "Parameters",
            "in": "body",
            "description": "Full name of the author",
            "schema": {
              "$ref": "#/definitions/Earning"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/earning/{id}": {
      "get": {
        "tags": ["Earnings"],
        "description": "Get details of a earning",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Use 'Bearer' prefix",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the earning",
            "type": "string"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "put": {
        "tags": ["Earnings"],
        "description": "Update a specific earning",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Use 'Bearer' prefix",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "name": "name",
            "in": "body",
            "description": "Full name of the earning",
            "schema": {
              "$ref": "#/definitions/Earning"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      },
      "delete": {
        "tags": ["Earnings"],
        "description": "Delete a specific earning",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Use 'Bearer' prefix",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    },
    "/earning/{id}/restore": {
      "put": {
        "tags": ["Earnings"],
        "description": "Restore a specific earning, that was deleted",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Use 'Bearer' prefix",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal Error"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "required": ["username", "password"],
      "properties": {
        "username": {
          "type": "string",
          "uniqueItems": true
        },
        "password": {
          "type": "string"
        }
      }
    },
    "RefreshToken": {
      "required": ["refreshToken"],
      "properties": {
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "Earning": {
      "required": ["name", "isPublic"],
      "properties": {
        "name": {
          "type": "string",
          "uniqueItems": true
        },
        "isPublic": {
          "type": "boolean",
          "uniqueItems": false
        }
      }
    }
  }
}
